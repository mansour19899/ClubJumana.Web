@model IEnumerable<ClubJumana.DataLayer.Entities.ProductMaster>

@{
    ViewData["Title"] = "salam";
}



<p id="result">salam</p>
<input type="text" id="fname" onfocusout="myFunctionn()">
<input type="button" value="Click Here" name="no" onclick="ButtonClick_Test()">
<script type="text/javascript">
    @{
        var listt = Model.ToList();
        string[] IdList= Model.Select(p=>p.Id.ToString()).ToArray();
        string[] UPCList= Model.Select(p=>p.UPC.ToString()).ToArray();
        string[] NameList= Model.Select(p=>p.Name.ToString().Replace("\r\n", string.Empty + " ")).ToArray();
        var products= Model.ToArray();
        int count = Model.Count();

    }
    var Id_list = @Html.Raw(Json.Serialize(@IdList));
    var UPC_list = @Html.Raw(Json.Serialize(@UPCList));
    var Name_list = @Html.Raw(Json.Serialize(@NameList));
    var Productmater = @Html.Raw(Json.Serialize(@products));

    function checkAdult(upc) {
        return upc == document.getElementById("fname").value;
    }

    function ButtonClick_Test() {
        @{
            string xx = Model.ElementAt(0).Name.Replace("\r\n", string.Empty + " ");
        }
        document.getElementById("result").innerText = fields_list[0];
    }
    function myFunctionn() {
        var index = UPC_list.findIndex(checkAdult);
        var car = Productmater.find(car => car.upc === "713091731097");
        alert(car.styleNumber);
        console.log(car);
        if (index == -1) {
            document.getElementById("result").innerText = "Not Found";
        } else {
            document.getElementById("result").innerText = Name_list[index];
        }

    }

    function myFunction() {

        var x = document.getElementById("fname");
        x.value = x.value.toUpperCase();
        @{
            string tt = Model.FirstOrDefault().Name;
        }


        document.getElementById("result").innerText = "@tt";
    }

    document.getElementById('fname').onkeypress = function(e){
        if (!e) e = window.event;
        var keyCode = e.keyCode || e.which;
        if (keyCode == '13'){
            document.getElementById("result").innerText = "Seyedmansour";
            return false;
        }
    }

</script>
<p>
    <a asp-action="">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VendorCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StyleNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VariantFK)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SKU)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UPC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ITF14Inner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ITF14Master)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MadeIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FobPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RetailPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WholesalePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SalePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SaleStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SaleEndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Margin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PackCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockOnHand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GoodsReserved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Transit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InnersCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CartonsCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RefundQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TempBalance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdateInventory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Income)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Outcome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RowVersion)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VendorCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StyleNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VariantFK)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SKU)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UPC)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ITF14Inner)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ITF14Master)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Size)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MadeIn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FobPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetailPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WholesalePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SalePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SaleStartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SaleEndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Margin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PackCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockOnHand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GoodsReserved)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Transit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InnersCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CartonsCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RefundQuantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TempBalance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdateInventory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Income)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Outcome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Image)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Active)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RowVersion)
                </td>
                <td>
                    @Html.ActionLink("Edit", "", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>
