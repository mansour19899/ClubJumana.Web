@model IEnumerable<ClubJumana.DataLayer.Entities.ProductMaster>

@{
    ViewData["Title"] = "salam";
}

<div id="app">
    <div id="unlockp" class="login-form-bg h-100" style="position:fixed;width:100%;height:100%;top:0;left:0;right:0;bottom:0;z-index:1000;background-color:#F3F3F9;">
        <div class="container h-100">
            <div class="row justify-content-center h-100">
                <div class="col-xl-6">
                    <div class="form-input-content">
                        <div class="card login-form mb-0">
                            <div class="card-body pt-5">
                                <img src="~/images/logo-jummana.jpg" class="img-thumbnail mx-auto d-block" alt="Cinque Terre" width="304" height="236">
                                <div class="mt-5 mb-3 login-input">
                                    <div class="form-group">
                                        <input type="password" v-model="pass" class="form-control" v-on:keyup.enter="unlockPage" placeholder="Password" required="">
                                    </div>
                                    <button class="btn login-form__btn submit w-100" v-on:click="unlockPage">Unlock</button>
                                    <div id="mgpass" class="alert alert-danger my-4 invisible">Incorrect password. try again</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="bootstrap-modal">
        <!-- Button trigger modal -->
        <button id="btnsessionExpird" style="display:none;"  type="button" class="btn btn-primary" data-toggle="modal" data-target="#basicModal">Basic modal</button>
        <!-- Modal -->
        <div v-if="allow" class="modal fade" id="basicModal" style="display: none;" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Session Expired</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>×</span>
                        </button>
                    </div>
                    <div class="modal-body">Please refresh page</div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="location.reload()">Refresh</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        @*<div class="col-xl-3 col-lg-2 col-md-12">

        </div>*@
        <div class="col-xl-6 col-lg-8 col-md-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Club Jummana Corp</h4>
                    <!-- Nav tabs -->
                    <div class="custom-tab-1">
                        <ul class="nav nav-tabs mb-3">
                            <li class="nav-item">
                                <a class="nav-link active show" data-toggle="tab" v-on:click="showlist=false , age=null" href="#home1">Single Search</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" v-on:click="getList" href="#profile1">List</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane fade active show" id="home1" role="tabpanel">
                                <div class="p-t-15">
                                    <div class="form-inline" style="justify-content: center;">
                                        <div class="form-group mx-sm-3 mb-2">
                                            <input id="txtSearch" class="form-control" v-model="search" v-on:keyup.enter="getSearch" placeholder="Type Here" style="min-width:300px;">
                                        </div>
                                        <div>
                                            <button class="btn btn-primary mb-2 mr-3" v-on:click="PasteSearch">Paste</button>
                                            <button class="btn btn-dark mb-2" v-on:click="getSearch">Search</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="profile1">
                                <div class="p-t-15">
                                    <div class="form-inline" style="justify-content: center;">
                                        <div class="form-group mx-sm-3 mb-2">
                                            <input class="form-control" type="text" v-model="searchValue" v-on:keyup="searchUpdate" placeholder="Type Here" style="min-width:300px;">
                                        </div>
                                        <div class="mx-sm-3 mb-2" style="margin-right: 10px;">
                                            <select class="form-control" id="selectedSearch" v-model="keySearch" v-on:change="searchValue=''">
                                                <option value="1">Title</option>
                                                <option value="2">SKU</option>
                                                <option value="3">UPC</option>
                                                <option value="4">Style Number</option>
                                                <option value="5">Favorite List</option>
                                            </select>
                                        </div>
                                        <div class="mx-sm-3 mb-2">
                                            <button class="btn btn-dark" v-on:click="searchResult">Filter</button>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div v-if="age">
                <div v-if="age.sku=='-'" class="alert alert-danger">Product Not Found</div>
            </div>
        </div>
    </div>
    <div v-if="age">
        <div v-if="age.sku!='-'">
            <div class="row">
                <div class="col-4">
                    <button class="btn btn-dark mb-2" style="padding: 10px 50px;" v-on:click="backtolist" v-show="btnBack">Back</button>
                </div>
            </div>
            <div class="row">
                @*<div class="col-xl-3 col-lg-2 col-md-12">

        </div>*@
                <div class="col-xl-6 col-lg-8 col-md-12">
                    <div class="card">
                        <div class="card-body" style="font-size: 1rem;">
                            <div class="card-title">
                                <h4 style="display: inline;">{{ age.product.styleNumber}}</h4><span class="label label-info ml-3" v-show="age.isWholesale" style="background-color: navy;" >Wholesale</span>
                                <span class="label label-success  ml-3" style="background-color: darkgreen;" v-show="age.isRetail">Retail</span>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th></th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <th>Product Type</th>
                                            <td>{{ age.productType.name }}</td>
                                            <td>
                                                
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Sku</th>
                                            <td id="sku1">{{ age.sku }}</td>
                                            <td>
                                                <span onClick="copyToClipboard('sku1','SKU Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Title</th>
                                            <td>{{ age.product.productTittle }}</td>
                                            <td>
                                                
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Style Number</th>
                                            <td id="stylenumber1">{{ age.product.styleNumber}}</td>
                                            <td>
                                                <span onClick="copyToClipboard('stylenumber1','Style Number Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Barcode</th>
                                            <td id="upc1">{{ age.barcode.barcodeNumber }}</td>
                                            <td>
                                                <span onClick="copyToClipboard('upc1','Barcode Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Colour</th>
                                            <td>{{ age.colour.name }}</td>
                                            <td>
                                                
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Size</th>
                                            <td>{{ age.size  }}</td>
                                            <td>
                                                
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>WholeSale A</th>
                                            <td id="wholesalea">{{ age.wholesaleA  }}</td>
                                            <td>
                                                <span onClick="copyToClipboard('wholesalea','Wholesale A Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>WholeSale B</th>
                                            <td id="wholesale">{{ age.wholesaleB }}</td>
                                            <td>
                                                <span onClick="copyToClipboard('wholesale','Wholesale B Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Publish Rate</th>
                                            <td id="publishrate">{{ age.publishRate}}</td>
                                            <td>
                                                <span onClick="copyToClipboard('publishrate','Publish Rate Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Retail Price</th>
                                            <td id="retail" >{{ age.retailPrice }}</td>
                                            <td>
                                                <span onClick="copyToClipboard('retail','Retail Price Copied.')" class="card-widget__icon" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Copy"><i class="icon-note" style="color: navy;font-size: 20px;"></i></span>
                                            </td>
                                        </tr>

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-5" v-if="age.data6!=null">
                    <div class="card">
                        <img class="img-fluid" v-bind:src="'../images/ProductImages/'+ age.data6" alt="" style="max-height: 660px;">                       
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    <div class="card card-widget">
                        <div class="card-body" style="background: #333333;">
                            <div class="media">
                                <div class="media-body">
                                    <h2 class="card-widget__title" v-html="age.note"></h2>
                                    <h5 class="card-widget__subtitle">NOTE</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-4">

                </div>
            </div>         
        </div>
    </div>
    <div v-else>
        <p></p>
    </div>

    <div class="card" v-show="showlist">
        <div class="card-body">
            @*<div class="bootstrap-pagination">
                <nav v-show="parseInt(pages)>1">
                    <ul class="pagination justify-content-center">
                        <li class="page-item ">
                            <a class="page-link" href="#" tabindex="-1" v-on:click="previousPage">Previous</a>
                        </li>
                        <li class="page-item disabled" v-show="currentPage>2">
                            <a class="page-link" href="#">...</a>
                        </li>
                        <li class="page-item" v-show="currentPage==pages1&& parseInt(pages)>2">
                            <a class="page-link" href="#" v-bind:data-id=parseInt(currentPage)-1 v-on:click="getpage">{{ parseInt(currentPage)-2 }}</a>
                        </li>
                        <li class="page-item" v-show="currentPage>1" v-bind:id=parseInt(currentPage)-1>
                            <a class="page-link" href="#" v-bind:data-id=parseInt(currentPage)-1 v-on:click="getpage">{{ parseInt(currentPage)-1 }}</a>
                        </li>
                        <li class="page-item active" v-bind:id=currentPage>
                            <a class="page-link" href="#" v-bind:data-id=currentPage v-on:click="getpage">{{ currentPage }}</a>
                        </li>
                        <li class="page-item" v-show="currentPage<pages" v-bind:id=parseInt(currentPage)+1>
                            <a class="page-link" href="#" v-bind:data-id=parseInt(currentPage)+1 v-on:click="getpage">{{ parseInt(currentPage)+1 }}</a>
                        </li>
                        <li class="page-item" v-show="currentPage==1&& parseInt(pages)>2">
                            <a class="page-link" href="#" v-bind:data-id=parseInt(currentPage)+2 v-on:click="getpage">{{ parseInt(currentPage)+2 }}</a>
                        </li>
                        <li class="page-item disabled" v-show="currentPage< parseInt(pages)-1">
                            <a class="page-link" href="#" v-show="currentPage!=pages">...</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="#" v-on:click="nextPage">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>*@
            <h5 class="card-title">Resualt: {{countList}}</h5>
            <div class="row">
                <div class="w-30 mx-auto mb-4">
                    <button type="button" class="btn mb-1 btn-outline-dark mr-3" v-on:click="previousPage">Previous</button>
                    <span class="mr-3">Page</span>
                    <div style="display: inline-block;" class="mr-3">
                        <input class="form-control" v-model="currentPage" type="text"  style="width: 60px; height: 37px;">
                    </div>
                    <span class="mr-3">of {{pages}}</span>
                    <button type="button" class="btn mb-1 btn-outline-dark" v-on:click="nextPage" >Next</button>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered table-striped verticle-middle">
                    <thead>
                        <tr>
                            <th scope="col">Alu</th>
                            <th scope="col">Product Type</th>
                            <th scope="col">Style Number</th>
                            <th scope="col">Colour</th>
                            <th scope="col">Size</th>
                            <th scope="col">Sku</th>
                            <th scope="col">Barcode</th>
                            <th scope="col">Title</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="item in searchResult">
                            <td><button v-on:click="getvariant" v-bind:data-id=item.id class="btn btn-success mb-2" style="width: 100%;">{{item.id}}</button></td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.productType}}</td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.styleNumber}}</td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.color}}</td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.size}}</td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.sku}}</td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.upc}}</td>
                            <td v-bind:class="item.id==SelectedId && 'SelectedClass'">{{item.title}}</td>
                        </tr>

                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div id="snackbar">Some text some message..</div>



</div>
<script src="https://unpkg.com/vue@3.0.2"></script>

<script>
    function copyToClipboard(id,message) {
        var from = document.getElementById(id);
        var range = document.createRange();
        window.getSelection().removeAllRanges();
        range.selectNode(from);
        window.getSelection().addRange(range);
        document.execCommand('copy');
        window.getSelection().removeAllRanges();
        mymessage(message);
    }
    const app = Vue.createApp(
        {
            props: ['id'],
            data() {
                return {
                    age: null,
                    listt: null,
                    showlist: false,
                    idd: '6',
                    search: '',
                    add: 'https://localhost:44374/api/ProductInformation/',
                    aded: 'https://clubjumanaweb20200711093516.azurewebsites.net/api/ProductInformation/',
                    addd: "hhh",
                    allow: false,
                    btnBack: false,
                    searchValue: "",
                    keySearch: "1",
                    pages: "1",
                    currentPage: "1",
                    perPage: "50",
                    countList: 0,
                    pass: "",
                    SelectedId:0

                }
            },
            methods: {
                getSearch() {
                    if (this.allow) {
                        this.btnBack = false,
                            this.idd = this.search,
                            fetch('https://localhost:44374/api/ProductInformation/' + this.idd)
                                .then(res => res.json())
                                .then(data => this.age = data)
                                .catch(err => console.log(err.message))
                    }
                },
                PasteSearch() {
                    if (this.allow) {

                        //const resultsEl = document.getElementById('txtSearch');
                        navigator.clipboard.readText()
                            .then(text => {
                                this.search = text;
                                this.getSearch();
                            })
                            .catch(err => {
                                console.log('Something went wrong', err);
                            });

                    }
                },
                getList() {
                    if (this.allow) {
                        if (this.listt == null) {
                            fetch('https://localhost:44374/api/ProductInformationList/3')
                                .then(res => res.json())
                                .then(data => this.listt = data)
                                .catch(err => console.log(err.message))
                        }
                        this.age = null,
                        this.showlist = true
                    }

                },
                backtolist() {
                    this.age = null,
                    this.showlist = true
                },
                getvariant: function (event) {
                    var preload = document.getElementById('preloaderSub');
                    if (this.allow) {
                        var id = event.target.getAttribute('data-id');
                        preload.style.display = "block";
                        fetch('https://localhost:44374/api/ProductInformationById/' + id)
                            .then(res => res.json())
                            .then(data => this.age = data)
                            .catch(err => console.log(err.message))
                    }
                    this.showlist = false,
                        this.btnBack = true,
                        this.SelectedId = id,
                        setTimeout(function () { preload.style.display = "none"; }, 1000);
                        
                },
                getpage: function (event) {
                    if (this.allow) {
                        this.currentPage = event.target.getAttribute('data-id');
                    }
                },
                nextPage() {
                    if (this.currentPage < this.pages) {
                        this.currentPage = parseInt(this.currentPage) + 1;
                    }                    

                },
                previousPage() {
                    if (this.currentPage >1) {
                        this.currentPage = parseInt(this.currentPage) - 1;
                    } 

                },
                unlockPage() {
                    if (this.pass == "2014") {
                        this.allow = true;
                        document.getElementById("unlockp").style.display = "none";
                    }
                    else {
                        var element = document.getElementById("mgpass");
                        element.classList.remove("invisible");
                    }

                },
                searchUpdate: function (event) {
                    if (this.allow) {
                        this.age = null;
                        this.currentPage = 1;
                        this.showlist = true;
                        this.SelectedId = 0;
                        //if (event.key == "Enter") {
                        //    console.log("enter key was pressed!");
                        //}
                    }
                }
            },
            computed: {
                searchResult() {
                    if (this.allow) {
                        let templist = this.listt;

                        if (this.keySearch == 1) {
                            if (this.searchValue != '' && this.searchValue) {
                                let templist2 = templist.slice(1,3);
                                let xxx = this.searchValue.toUpperCase().split(" ");

                                for (i = 0; i < xxx.length; i++) {
                                    templist2 = [];
                                    templist2 = templist.filter((item) => {
                                        return item.title
                                            .toUpperCase()
                                            .includes(xxx[i].toUpperCase())
                                    });
                                    templist = [];
                                    templist = templist2;
                                }

                               
                            }

                        }
                        else if (this.keySearch == 2) {
                            if (this.searchValue != '' && this.searchValue) {
                                templist = templist.filter((item) => {
                                    return item.sku
                                        .toUpperCase()
                                        .includes(this.searchValue.toUpperCase())
                                })
                            }

                        }
                        else if (this.keySearch == 3) {
                            if (this.searchValue != '' && this.searchValue) {
                                templist = templist.filter((item) => {
                                    return item.upc
                                        .toUpperCase()
                                        .includes(this.searchValue.toUpperCase())
                                })
                            }

                        }
                        else if (this.keySearch == 4) {
                            if (this.searchValue != '' && this.searchValue) {
                                templist = templist.filter((item) => {
                                    return item.styleNumber
                                        .toUpperCase()
                                        .includes(this.searchValue.toUpperCase())
                                })
                            }

                        }
                        else if (this.keySearch == 5) {
                            if (this.searchValue != '' && this.searchValue) {
                                templist = templist.filter((item) => {
                                    return item.sku
                                        .toUpperCase()
                                        .includes(this.searchValue.toUpperCase())
                                })
                            }

                        }
                        else
                        {

                        }

                        if (templist == null) {
                            return templist
                        }
                        else {
                            this.countList = templist.length;
                            this.pages = Math.ceil(this.countList / this.perPage);
                            return templist.slice(this.perPage * (parseInt(this.currentPage) - 1), this.perPage * (parseInt(this.currentPage) - 1) + parseInt(this.perPage))
                        }
                        
                    }
                }
            },
            mounted() {
                this.getSearch(),
                    this.PasteSearch(),
                    this.getList(),
                    this.backtolist(),
                    this.getvariant(),
                    this.getpage(),
                    this.previousPage(),
                    this.nextPage(),
                    this.searchUpdate()
            }


        })

    app.mount('#app')

</script>




